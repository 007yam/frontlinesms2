#!/bin/bash
if [ ! -z "$1" ] && [ ! -z "$2" ]
then
	echo "AWESOME #Username : $1 #Password : $2"
else
	echo "Upload files to your server"
	echo "Error ### Usage: ./do/deploy_builds <username> <password>"
	exit
fi
USERNAME=$1
PASSWORD=$2

root_url="ftp://frontlinesms.com/"
remote_upload_path=$root_url"/httpdocs/downloads/"

local_windows_path=`ls install/target/install4j/frontlinesms* | grep window`
local_mac_path=`ls install/target/install4j/frontlinesms* | grep mac`
local_unix_path=`ls install/target/install4j/frontlinesms* | grep unix`

r_path="http://www.frontlinesms.com/downloads/"

r_windows_path=$r_path`ls install/target/install4j/ | grep windows`
r_mac_path=$r_path`ls install/target/install4j/ | grep mac`
r_unix_path=$r_path`ls install/target/install4j/ | grep unix`

echo ">>>>>>>>>>> Uploading to"$remote_upload_path
#uloading the builds
echo "#### Uloading windows build.."
curl -v -T $local_windows_path -u $USERNAME:$PASSWORD -Q "TYPE I" "$remote_upload_path"
echo "#### Uloading mac build.."
curl -v -T $local_mac_path -u $USERNAME:$PASSWORD -Q "TYPE I" "$remote_upload_path"
echo "#### Uploading unix build..."
curl -v -T $local_unix_path -u $USERNAME:$PASSWORD -Q "TYPE I" "$remote_upload_path"

echo "#### Creating the xml file with file names"
touch build_links.json
echo "{'windows':'$r_windows_path', 'mac':'$r_mac_path', 'unix':'$r_unix_path'}" >> build_links.json
echo "#### Uloading xml document with file names"
local_json_path="build_links.json"
curl -v -T $local_json_path -u $USERNAME:$PASSWORD -Q "TYPE I" "$remote_upload_path"

echo "#### Removing build_links.json... :("
rm build_links.json

echo "Complete .... :)"