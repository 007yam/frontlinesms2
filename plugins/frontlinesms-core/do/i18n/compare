#!/usr/bin/env groovy

/* Script to compare grails internationalisation property files (or any property files in general) */
if(args.size() < 2) {
	println("# compares i18n file to master message.properties")
	println("# usage: i18n-compare MASTER OTHER [APPLY-CHANGES] [NEW-FILE]")
	println("#    MASTER: The main property file, assumed to be correct")
	println("#    OTHER : The file to be compared to MASTER")
	return
}

def loadProps(filename) {
	def props = new Properties()
	new File(filename).withInputStream { stream -> props.load(stream); }
	return props
}

def compare(fileA, fileB) {
	println "# Reporting on KEY differences between $fileA and $fileB..."
	// read files into props
	master = loadProps(fileA)
	other = loadProps(fileB)

	// init lists
	def missingKeys = (master.keySet().findAll {
		(!other[it] || other[it].length() == 0) &&
				!(master[it] ==~ /\s*\{[0-9]\}\s*$/ )
	})
	def missingKeysSize = missingKeys.size()
	def redundantKeys = other.keySet() - master.keySet()
	def redundantKeysSize = redundantKeys.size()
	def langName = other["language.name"]

	println "# RedundantKeys are..."
	println "# \t${redundantKeys.join("\n# \t")}"
	println "# Missing keys are..."
	println "# \t${missingKeys.join("\n# \t")}"
	def identicalValuesCount = compareValues(master, other)
	double perc = ((master.size() - missingKeysSize - identicalValuesCount) / master.size()) * 100
	println "# Summary #"
	println "# Redundant entries: $redundantKeysSize, MissingEntries: $missingKeysSize, Identical values: $identicalValuesCount"
	println "# ${langName? langName + ' translation' : fileB} is ${perc.round(2)}% complete"

	return perc == 100
}

def compareValues(master, other) {
	def identicalMap = master.findAll { k, v ->
		if(master[k] == other[k]) {	[k: other[k]] }
	}
	def identicalMapSize = identicalMap.keySet().size()
	println "# Keys with identical Values are: "
	println "#\t${identicalMap.keySet().join('\n#\t')}"
	println "\n"
	return identicalMapSize
}

def perc = compare(args[0], args[1])
System.exit perc == 100? 0: 1

